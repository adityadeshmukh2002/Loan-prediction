# -*- coding: utf-8 -*-
"""Loan Prediction

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OHk72pBytiWecU38c_FZGNb6qVzx3PAP
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

df = pd.read_csv('/content/Loan Prediction DataSet.csv')
df.head()

df.describe()

df.isnull().sum()

df = df.dropna()

df.isnull().sum()

df.replace({"Loan_Status":{'N':0,'Y':1}},inplace=True)

df.head()

df['Dependents'].value_counts()

df = df.replace(to_replace='3+', value=4)

df['Dependents'].value_counts()

sns.countplot(x='Education',hue='Loan_Status',data=df)

sns.countplot(x='Married',hue='Loan_Status',data=df)

df.head(10)

df.replace({"Gender":{'Male':1,'Female':0},
           "Education":{'Graduate':1,'Not Graduate':0},
           "Property_Area":{'Rural':0,'Semiurban':1,'Urban':2},
           "Self_Employed":{'Yes':1,'No':0},
           "Married":{'Yes':1,'No':0}},inplace=True)

df.head(10)

x = df.drop(columns=['Loan_ID','Loan_Status'],axis=1)
y = df['Loan_Status']

x_train, x_test,y_train,y_test = train_test_split(x,y,test_size=0.1,stratify=y,random_state=42)

classifier= svm.SVC(kernel='linear')

classifier.fit(x_train,y_train)

x_train_prediction = classifier.predict(x_train)
train_data_acc = accuracy_score(x_train_prediction,y_train)
print(f'Accuracy on training data : {train_data_acc}')

x_test_prediction = classifier.predict(x_test)
test_data_accuray = accuracy_score(x_test_prediction,y_test)

print(f'Accuracy on training data : {test_data_accuray}')